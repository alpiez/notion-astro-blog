---
import { Image } from "@astrojs/image/components";
import BlogRender from "../components/blog_render.astro";
import Htmlbody from "../components/htmlbody.astro";
import { databaseId, notion } from "../lib/common_var";
import { searchPageWithSlug } from "../lib/notion_request";
import Tag from "../components/cards/tag.astro";
import type { NotionResult } from "../lib/types";

export async function getStaticPaths() {
  const response = await notion.databases.query({
    database_id: databaseId,
    sorts: [
      {
        property: "Created",
        direction: "ascending",
      },
    ],
  });

  return response.results.map((page) => {
    if (
      "properties" in page &&
      "formula" in page.properties.Slug &&
      "string" in page.properties.Slug.formula
    ) {
      return {
        params: { slug: page.properties.Slug.formula.string },
      };
    }
  });
}

const { slug } = Astro.params;
let result: NotionResult | undefined;

if (slug != undefined) {
  result = await searchPageWithSlug(slug);
}
---

<Htmlbody>
  {
    result != undefined && result.card != undefined && result.blocks != null ? (
      <>
        <div class="bg-c-sky rounded-b-3xl mb-8">
          {result.card.cover != null ? (
            <div class="w-full h-[264px] overflow-hidden">
              <Image
                src={result.card.cover}
                alt="header image"
                width={800}
                height={600}
                fit="cover"
                format={"webp"}
                position={"center"}
              />
            </div>
          ) : (
            ""
          )}
          <div class="p-8">
            <div class="text-4xl font-bold">{result.card.title}</div>
            <div class="text-[#777] mb-2">
              {result.card.date.toUTCString().slice(5, 16)}
            </div>
            <Tag
              className="mb-4"
              tagName={result.card.tagName}
              tagColor={result.card.tagColor}
            />
            <div>{result.card.intro}</div>
          </div>
        </div>
        <article class="px-8">
          <BlogRender blocks={result.blocks} />
        </article>
      </>
    ) : (
      ""
    )
  }
  <script is:inline>
    function toggle(ele) {
      if (ele.lastElementChild.style.display === "none") {
        ele.lastElementChild.style.display = "block";
        ele.firstElementChild.style.transform = "rotate(90deg)";
      } else {
        ele.lastElementChild.style.display = "none";
        ele.firstElementChild.style.transform = "rotate(0deg)";
      }
    }
  </script>
</Htmlbody>
